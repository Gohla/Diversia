module Type

imports
	
  Lexical
	
  data/type
  data/enum
  data/component
  data/plugin

exports

  context-free syntax
    
    %% Types
    "Int" -> Type {cons("IntType")}
    "Real" -> Type {cons("RealType")}
    "Bool" -> Type {cons("BoolType")}
    "String" -> Type {cons("StringType")}
    "Void" -> Type {cons("VoidType")}
    "Array" "<" Type ">" -> Type {cons("ArrayType")}
    "Map" "<" Type "," Type ">" -> Type {cons("DictType")}
    BuiltinType -> Type
    EnumType -> Type
    ComponentType -> Type {prefer}
    PluginType -> Type {prefer}
    Id -> Type {cons("CustomType"), avoid}
    
  context-free restrictions
  	
  	Type -/- [a-zA-Z0-9\_]
  	