module data/event

imports

	include/DiversiaScript
	signatures

signature constructors
	
	Event: Id * List(Type) -> Event

rules
	
	is-object-event(|event) = <get-object-event-data> event
	is-global-event(|event) = <get-global-event-data> event

	get-object-event-data: event -> <fetch-elem(has-name(|event))> <object-events> 
	get-global-event-data: event -> <fetch-elem(has-name(|event))> <global-events>
	get-event-data: event -> <fetch-elem(has-name(|event))> <all-events>
	
	has-name(|name) =  ?Event(name, _)
	get-name: Event(name, _) -> name
	get-proposal: Event(name, _) -> (name, $[TODO: added event info!])

	get-event-types: Event(_, types) -> types
	get-event-types: event -> <get-event-types> <get-event-data> event

	all-events = <conc> (<global-events>, <object-events>)
	
	shared-events = ![ 
		Event("Create", []), Event("Destroy", []), 
		Event("EarlyUpdate", []), Event("Update", []), Event("LateUpdate", []), 
		Event("EarlyFrame", [RealType()]), Event("Frame", [RealType()]), Event("LateFrame", [RealType()]),
		Event("MouseMoved", [MouseState()]), Event("MousePressed", [MouseButton()]), Event("MouseReleased", [MouseButton()]),
		Event("KeyPressed", [KeyboardButton(), IntType()]), Event("KeyReleased", [KeyboardButton(), IntType()])
	]
	object-events = <concat> [ 
		<shared-events>, [ 
			Event("StateEnter", []), Event("StateExit", []),
			Event("ComponentChange", [Component(), BoolType()]),
			Event("TransformChange", [Node()]),
			Event("AreaChange", [ClientObject(), BoolType()]),
			Event("CollisionWith", [ClientObject()])
		] 
	]
	global-events = <concat> [ 
		<shared-events>, [  
			Event("ObjectChange", [ClientObject(), BoolType()])		
		] 
	]
	