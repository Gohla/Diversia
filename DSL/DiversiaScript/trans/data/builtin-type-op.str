/// This file is generated by DSLTypeExtractor, do not edit this file!

module data/builtin-type-op

imports

	include/DiversiaScript
	signatures

signature constructors

	Operator:Op * ReturnType * ParamType -> Operator
rules

	builtin-type-ops: ClientComponent() -> []

	builtin-type-ops: ClientComponentTemplate() -> []

	builtin-type-ops: ClientObject() -> []

	builtin-type-ops: ClientObjectManager() -> []

	builtin-type-ops: ClientObjectTemplate() -> []

	builtin-type-ops: ClientObjectTemplateManager() -> []

	builtin-type-ops: Lua() -> []

	builtin-type-ops: PermissionManager() -> []

	builtin-type-ops: ServerNeighborsPlugin() -> []

	builtin-type-ops: ServerPlugin() -> []

	builtin-type-ops: ClientServerPlugin() -> []

	builtin-type-ops: ClientServerPluginManager() -> []

	builtin-type-ops: LayerInstance() -> []

	builtin-type-ops: Component() -> []

	builtin-type-ops: ComponentHandle() -> []

	builtin-type-ops: ComponentTemplate() -> []

	builtin-type-ops: Object() -> []

	builtin-type-ops: ObjectManager() -> []

	builtin-type-ops: ObjectTemplate() -> []

	builtin-type-ops: ObjectTemplateManager() -> []

	builtin-type-ops: Animation() -> []

	builtin-type-ops: AreaTrigger() -> []

	builtin-type-ops: Audio() -> []

	builtin-type-ops: Axis() -> []

	builtin-type-ops: Camera() -> []

	builtin-type-ops: CollisionShape() -> []

	builtin-type-ops: Entity() -> []

	builtin-type-ops: ForceField() -> []

	builtin-type-ops: GameMode() -> []

	builtin-type-ops: InputManager() -> []

	builtin-type-ops: KeyboardState() -> []

	builtin-type-ops: Light() -> []

	builtin-type-ops: Mesh() -> []

	builtin-type-ops: MouseState() -> []

	builtin-type-ops: Particle() -> []

	builtin-type-ops: ResourceManager() -> []

	builtin-type-ops: RigidBody() -> []

	builtin-type-ops: SceneManager() -> []

	builtin-type-ops: SceneNode() -> []

	builtin-type-ops: Sky() -> []

	builtin-type-ops: Terrain() -> []

	builtin-type-ops: Text() -> []

	builtin-type-ops: PropertySynchronization() -> []

	builtin-type-ops: ResourceInfo() -> []

	builtin-type-ops: ServerInfo() -> []

	builtin-type-ops: ServerNeighbors() -> []

	builtin-type-ops: Angle() -> []

	has-builtin-type-op(|param0) = ?ADD(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(ADD(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(ADD(), Colour()); <?Colour()> param0; !Colour()
	has-builtin-type-op(|param0) = ?SUB(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(SUB(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(SUB(), Colour()); <?Colour()> param0; !Colour()
	has-builtin-type-op(|param0) = ?MUL(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(MUL(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(MUL(), Colour()); <?Colour()> param0; !Colour()
	has-builtin-type-op(|param0) = ?MUL(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(MUL(), RealType()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(MUL(), RealType()); <?Colour()> param0; !Colour()
	has-builtin-type-op(|param0) = ?DIV(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(DIV(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(DIV(), Colour()); <?Colour()> param0; !Colour()
	has-builtin-type-op(|param0) = ?DIV(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(DIV(), RealType()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(DIV(), RealType()); <?Colour()> param0; !Colour()
	has-builtin-type-op(|param0) = ?EQ(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(EQ(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(EQ(), Colour()); <?Colour()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?NEQ(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(NEQ(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(NEQ(), Colour()); <?Colour()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LT(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(LT(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(LT(), Colour()); <?Colour()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LTE(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(LTE(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(LTE(), Colour()); <?Colour()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GT(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(GT(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(GT(), Colour()); <?Colour()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GTE(); <?Colour()> param0
	has-builtin-type-op(|param0) = ?(GTE(), Colour()); <?Colour()> param0
	builtin-type-op-return(|param0) = ?(GTE(), Colour()); <?Colour()> param0; !BoolType()
	builtin-type-ops: Colour() -> [Operator(ADD(), Colour(), Colour()), Operator(SUB(), Colour(), Colour()), Operator(MUL(), Colour(), Colour()), Operator(MUL(), Colour(), RealType()), Operator(DIV(), Colour(), Colour()), Operator(DIV(), Colour(), RealType()), Operator(EQ(), BoolType(), Colour()), Operator(NEQ(), BoolType(), Colour()), Operator(LT(), BoolType(), Colour()), Operator(LTE(), BoolType(), Colour()), Operator(GT(), BoolType(), Colour()), Operator(GTE(), BoolType(), Colour())]

	has-builtin-type-op(|param0) = ?ADD(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(ADD(), Degree()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(ADD(), Degree()); <?Degree()> param0; !Degree()
	has-builtin-type-op(|param0) = ?ADD(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(ADD(), Radian()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(ADD(), Radian()); <?Degree()> param0; !Degree()
	has-builtin-type-op(|param0) = ?SUB(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(SUB(), Degree()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(SUB(), Degree()); <?Degree()> param0; !Degree()
	has-builtin-type-op(|param0) = ?SUB(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(SUB(), Radian()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(SUB(), Radian()); <?Degree()> param0; !Degree()
	has-builtin-type-op(|param0) = ?MUL(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(MUL(), Degree()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(MUL(), Degree()); <?Degree()> param0; !Degree()
	has-builtin-type-op(|param0) = ?MUL(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(MUL(), RealType()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(MUL(), RealType()); <?Degree()> param0; !Degree()
	has-builtin-type-op(|param0) = ?DIV(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(DIV(), RealType()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(DIV(), RealType()); <?Degree()> param0; !Degree()
	has-builtin-type-op(|param0) = ?UMIN(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(UMIN(), VoidType()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(UMIN(), VoidType()); <?Degree()> param0; !Degree()
	has-builtin-type-op(|param0) = ?EQ(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(EQ(), Degree()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(EQ(), Degree()); <?Degree()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?NEQ(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(NEQ(), Degree()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(NEQ(), Degree()); <?Degree()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LT(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(LT(), Degree()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(LT(), Degree()); <?Degree()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LTE(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(LTE(), Degree()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(LTE(), Degree()); <?Degree()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GT(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(GT(), Degree()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(GT(), Degree()); <?Degree()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GTE(); <?Degree()> param0
	has-builtin-type-op(|param0) = ?(GTE(), Degree()); <?Degree()> param0
	builtin-type-op-return(|param0) = ?(GTE(), Degree()); <?Degree()> param0; !BoolType()
	builtin-type-ops: Degree() -> [Operator(ADD(), Degree(), Degree()), Operator(ADD(), Degree(), Radian()), Operator(SUB(), Degree(), Degree()), Operator(SUB(), Degree(), Radian()), Operator(MUL(), Degree(), Degree()), Operator(MUL(), Degree(), RealType()), Operator(DIV(), Degree(), RealType()), Operator(UMIN(), Degree(), VoidType()), Operator(EQ(), BoolType(), Degree()), Operator(NEQ(), BoolType(), Degree()), Operator(LT(), BoolType(), Degree()), Operator(LTE(), BoolType(), Degree()), Operator(GT(), BoolType(), Degree()), Operator(GTE(), BoolType(), Degree())]

	builtin-type-ops: Matrix3() -> []

	builtin-type-ops: Matrix4() -> []

	builtin-type-ops: Node() -> []

	has-builtin-type-op(|param0) = ?ADD(); <?Quaternion()> param0
	has-builtin-type-op(|param0) = ?(ADD(), Quaternion()); <?Quaternion()> param0
	builtin-type-op-return(|param0) = ?(ADD(), Quaternion()); <?Quaternion()> param0; !Quaternion()
	has-builtin-type-op(|param0) = ?SUB(); <?Quaternion()> param0
	has-builtin-type-op(|param0) = ?(SUB(), Quaternion()); <?Quaternion()> param0
	builtin-type-op-return(|param0) = ?(SUB(), Quaternion()); <?Quaternion()> param0; !Quaternion()
	has-builtin-type-op(|param0) = ?MUL(); <?Quaternion()> param0
	has-builtin-type-op(|param0) = ?(MUL(), Quaternion()); <?Quaternion()> param0
	builtin-type-op-return(|param0) = ?(MUL(), Quaternion()); <?Quaternion()> param0; !Quaternion()
	has-builtin-type-op(|param0) = ?MUL(); <?Quaternion()> param0
	has-builtin-type-op(|param0) = ?(MUL(), Vector3()); <?Quaternion()> param0
	builtin-type-op-return(|param0) = ?(MUL(), Vector3()); <?Quaternion()> param0; !Vector3()
	has-builtin-type-op(|param0) = ?MUL(); <?Quaternion()> param0
	has-builtin-type-op(|param0) = ?(MUL(), RealType()); <?Quaternion()> param0
	builtin-type-op-return(|param0) = ?(MUL(), RealType()); <?Quaternion()> param0; !Quaternion()
	has-builtin-type-op(|param0) = ?UMIN(); <?Quaternion()> param0
	has-builtin-type-op(|param0) = ?(UMIN(), VoidType()); <?Quaternion()> param0
	builtin-type-op-return(|param0) = ?(UMIN(), VoidType()); <?Quaternion()> param0; !Quaternion()
	has-builtin-type-op(|param0) = ?EQ(); <?Quaternion()> param0
	has-builtin-type-op(|param0) = ?(EQ(), Quaternion()); <?Quaternion()> param0
	builtin-type-op-return(|param0) = ?(EQ(), Quaternion()); <?Quaternion()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?NEQ(); <?Quaternion()> param0
	has-builtin-type-op(|param0) = ?(NEQ(), Quaternion()); <?Quaternion()> param0
	builtin-type-op-return(|param0) = ?(NEQ(), Quaternion()); <?Quaternion()> param0; !BoolType()
	builtin-type-ops: Quaternion() -> [Operator(ADD(), Quaternion(), Quaternion()), Operator(SUB(), Quaternion(), Quaternion()), Operator(MUL(), Quaternion(), Quaternion()), Operator(MUL(), Vector3(), Vector3()), Operator(MUL(), Quaternion(), RealType()), Operator(UMIN(), Quaternion(), VoidType()), Operator(EQ(), BoolType(), Quaternion()), Operator(NEQ(), BoolType(), Quaternion())]

	has-builtin-type-op(|param0) = ?ADD(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(ADD(), Radian()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(ADD(), Radian()); <?Radian()> param0; !Radian()
	has-builtin-type-op(|param0) = ?ADD(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(ADD(), Degree()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(ADD(), Degree()); <?Radian()> param0; !Radian()
	has-builtin-type-op(|param0) = ?SUB(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(SUB(), Radian()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(SUB(), Radian()); <?Radian()> param0; !Radian()
	has-builtin-type-op(|param0) = ?SUB(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(SUB(), Degree()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(SUB(), Degree()); <?Radian()> param0; !Radian()
	has-builtin-type-op(|param0) = ?MUL(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(MUL(), Radian()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(MUL(), Radian()); <?Radian()> param0; !Radian()
	has-builtin-type-op(|param0) = ?MUL(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(MUL(), RealType()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(MUL(), RealType()); <?Radian()> param0; !Radian()
	has-builtin-type-op(|param0) = ?DIV(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(DIV(), RealType()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(DIV(), RealType()); <?Radian()> param0; !Radian()
	has-builtin-type-op(|param0) = ?UMIN(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(UMIN(), VoidType()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(UMIN(), VoidType()); <?Radian()> param0; !Radian()
	has-builtin-type-op(|param0) = ?EQ(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(EQ(), Radian()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(EQ(), Radian()); <?Radian()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?NEQ(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(NEQ(), Radian()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(NEQ(), Radian()); <?Radian()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LT(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(LT(), Radian()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(LT(), Radian()); <?Radian()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LTE(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(LTE(), Radian()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(LTE(), Radian()); <?Radian()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GT(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(GT(), Radian()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(GT(), Radian()); <?Radian()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GTE(); <?Radian()> param0
	has-builtin-type-op(|param0) = ?(GTE(), Radian()); <?Radian()> param0
	builtin-type-op-return(|param0) = ?(GTE(), Radian()); <?Radian()> param0; !BoolType()
	builtin-type-ops: Radian() -> [Operator(ADD(), Radian(), Radian()), Operator(ADD(), Radian(), Degree()), Operator(SUB(), Radian(), Radian()), Operator(SUB(), Radian(), Degree()), Operator(MUL(), Radian(), Radian()), Operator(MUL(), Radian(), RealType()), Operator(DIV(), Radian(), RealType()), Operator(UMIN(), Radian(), VoidType()), Operator(EQ(), BoolType(), Radian()), Operator(NEQ(), BoolType(), Radian()), Operator(LT(), BoolType(), Radian()), Operator(LTE(), BoolType(), Radian()), Operator(GT(), BoolType(), Radian()), Operator(GTE(), BoolType(), Radian())]

	has-builtin-type-op(|param0) = ?ADD(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(ADD(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(ADD(), Vector2()); <?Vector2()> param0; !Vector2()
	has-builtin-type-op(|param0) = ?SUB(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(SUB(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(SUB(), Vector2()); <?Vector2()> param0; !Vector2()
	has-builtin-type-op(|param0) = ?MUL(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(MUL(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(MUL(), Vector2()); <?Vector2()> param0; !Vector2()
	has-builtin-type-op(|param0) = ?MUL(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(MUL(), RealType()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(MUL(), RealType()); <?Vector2()> param0; !Vector2()
	has-builtin-type-op(|param0) = ?DIV(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(DIV(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(DIV(), Vector2()); <?Vector2()> param0; !Vector2()
	has-builtin-type-op(|param0) = ?DIV(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(DIV(), RealType()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(DIV(), RealType()); <?Vector2()> param0; !Vector2()
	has-builtin-type-op(|param0) = ?UMIN(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(UMIN(), VoidType()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(UMIN(), VoidType()); <?Vector2()> param0; !Vector2()
	has-builtin-type-op(|param0) = ?EQ(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(EQ(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(EQ(), Vector2()); <?Vector2()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?NEQ(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(NEQ(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(NEQ(), Vector2()); <?Vector2()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LT(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(LT(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(LT(), Vector2()); <?Vector2()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LTE(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(LTE(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(LTE(), Vector2()); <?Vector2()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GT(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(GT(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(GT(), Vector2()); <?Vector2()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GTE(); <?Vector2()> param0
	has-builtin-type-op(|param0) = ?(GTE(), Vector2()); <?Vector2()> param0
	builtin-type-op-return(|param0) = ?(GTE(), Vector2()); <?Vector2()> param0; !BoolType()
	builtin-type-ops: Vector2() -> [Operator(ADD(), Vector2(), Vector2()), Operator(SUB(), Vector2(), Vector2()), Operator(MUL(), Vector2(), Vector2()), Operator(MUL(), Vector2(), RealType()), Operator(DIV(), Vector2(), Vector2()), Operator(DIV(), Vector2(), RealType()), Operator(UMIN(), Vector2(), VoidType()), Operator(EQ(), BoolType(), Vector2()), Operator(NEQ(), BoolType(), Vector2()), Operator(LT(), BoolType(), Vector2()), Operator(LTE(), BoolType(), Vector2()), Operator(GT(), BoolType(), Vector2()), Operator(GTE(), BoolType(), Vector2())]

	has-builtin-type-op(|param0) = ?ADD(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(ADD(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(ADD(), Vector3()); <?Vector3()> param0; !Vector3()
	has-builtin-type-op(|param0) = ?SUB(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(SUB(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(SUB(), Vector3()); <?Vector3()> param0; !Vector3()
	has-builtin-type-op(|param0) = ?MUL(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(MUL(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(MUL(), Vector3()); <?Vector3()> param0; !Vector3()
	has-builtin-type-op(|param0) = ?MUL(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(MUL(), RealType()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(MUL(), RealType()); <?Vector3()> param0; !Vector3()
	has-builtin-type-op(|param0) = ?DIV(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(DIV(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(DIV(), Vector3()); <?Vector3()> param0; !Vector3()
	has-builtin-type-op(|param0) = ?DIV(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(DIV(), RealType()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(DIV(), RealType()); <?Vector3()> param0; !Vector3()
	has-builtin-type-op(|param0) = ?UMIN(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(UMIN(), VoidType()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(UMIN(), VoidType()); <?Vector3()> param0; !Vector3()
	has-builtin-type-op(|param0) = ?EQ(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(EQ(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(EQ(), Vector3()); <?Vector3()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?NEQ(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(NEQ(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(NEQ(), Vector3()); <?Vector3()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LT(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(LT(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(LT(), Vector3()); <?Vector3()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LTE(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(LTE(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(LTE(), Vector3()); <?Vector3()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GT(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(GT(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(GT(), Vector3()); <?Vector3()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GTE(); <?Vector3()> param0
	has-builtin-type-op(|param0) = ?(GTE(), Vector3()); <?Vector3()> param0
	builtin-type-op-return(|param0) = ?(GTE(), Vector3()); <?Vector3()> param0; !BoolType()
	builtin-type-ops: Vector3() -> [Operator(ADD(), Vector3(), Vector3()), Operator(SUB(), Vector3(), Vector3()), Operator(MUL(), Vector3(), Vector3()), Operator(MUL(), Vector3(), RealType()), Operator(DIV(), Vector3(), Vector3()), Operator(DIV(), Vector3(), RealType()), Operator(UMIN(), Vector3(), VoidType()), Operator(EQ(), BoolType(), Vector3()), Operator(NEQ(), BoolType(), Vector3()), Operator(LT(), BoolType(), Vector3()), Operator(LTE(), BoolType(), Vector3()), Operator(GT(), BoolType(), Vector3()), Operator(GTE(), BoolType(), Vector3())]

	has-builtin-type-op(|param0) = ?ADD(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(ADD(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(ADD(), Vector4()); <?Vector4()> param0; !Vector4()
	has-builtin-type-op(|param0) = ?SUB(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(SUB(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(SUB(), Vector4()); <?Vector4()> param0; !Vector4()
	has-builtin-type-op(|param0) = ?MUL(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(MUL(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(MUL(), Vector4()); <?Vector4()> param0; !Vector4()
	has-builtin-type-op(|param0) = ?MUL(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(MUL(), RealType()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(MUL(), RealType()); <?Vector4()> param0; !Vector4()
	has-builtin-type-op(|param0) = ?DIV(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(DIV(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(DIV(), Vector4()); <?Vector4()> param0; !Vector4()
	has-builtin-type-op(|param0) = ?DIV(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(DIV(), RealType()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(DIV(), RealType()); <?Vector4()> param0; !Vector4()
	has-builtin-type-op(|param0) = ?UMIN(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(UMIN(), VoidType()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(UMIN(), VoidType()); <?Vector4()> param0; !Vector4()
	has-builtin-type-op(|param0) = ?EQ(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(EQ(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(EQ(), Vector4()); <?Vector4()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?NEQ(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(NEQ(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(NEQ(), Vector4()); <?Vector4()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LT(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(LT(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(LT(), Vector4()); <?Vector4()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?LTE(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(LTE(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(LTE(), Vector4()); <?Vector4()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GT(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(GT(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(GT(), Vector4()); <?Vector4()> param0; !BoolType()
	has-builtin-type-op(|param0) = ?GTE(); <?Vector4()> param0
	has-builtin-type-op(|param0) = ?(GTE(), Vector4()); <?Vector4()> param0
	builtin-type-op-return(|param0) = ?(GTE(), Vector4()); <?Vector4()> param0; !BoolType()
	builtin-type-ops: Vector4() -> [Operator(ADD(), Vector4(), Vector4()), Operator(SUB(), Vector4(), Vector4()), Operator(MUL(), Vector4(), Vector4()), Operator(MUL(), Vector4(), RealType()), Operator(DIV(), Vector4(), Vector4()), Operator(DIV(), Vector4(), RealType()), Operator(UMIN(), Vector4(), VoidType()), Operator(EQ(), BoolType(), Vector4()), Operator(NEQ(), BoolType(), Vector4()), Operator(LT(), BoolType(), Vector4()), Operator(LTE(), BoolType(), Vector4()), Operator(GT(), BoolType(), Vector4()), Operator(GTE(), BoolType(), Vector4())]

	builtin-type-ops: RakNetGUID() -> []

