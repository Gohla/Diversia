/// This file is generated by DSLTypeExtractor, do not edit this file!

module data/builtin-type-base

imports

	include/DiversiaScript

rules

	is-builtin-type-base(|param0) = ?Component(); <?ClientComponent()> param0
	is-builtin-type-base(|param0) = ?PropertySynchronization(); <?ClientComponent()> param0
	builtin-type-bases: ClientComponent() -> [Component(), PropertySynchronization()]

	is-builtin-type-base(|param0) = ?ComponentTemplate(); <?ClientComponentTemplate()> param0
	is-builtin-type-base(|param0) = ?PropertySynchronization(); <?ClientComponentTemplate()> param0
	builtin-type-bases: ClientComponentTemplate() -> [ComponentTemplate(), PropertySynchronization()]

	is-builtin-type-base(|param0) = ?Object(); <?ClientObject()> param0
	builtin-type-bases: ClientObject() -> [Object()]

	is-builtin-type-base(|param0) = ?ObjectManager(); <?ClientObjectManager()> param0
	is-builtin-type-base(|param0) = ?ServerPlugin(); <?ClientObjectManager()> param0
	builtin-type-bases: ClientObjectManager() -> [ObjectManager(), ServerPlugin()]

	is-builtin-type-base(|param0) = ?ObjectTemplate(); <?ClientObjectTemplate()> param0
	is-builtin-type-base(|param0) = ?PropertySynchronization(); <?ClientObjectTemplate()> param0
	builtin-type-bases: ClientObjectTemplate() -> [ObjectTemplate(), PropertySynchronization()]

	is-builtin-type-base(|param0) = ?ObjectTemplateManager(); <?ClientObjectTemplateManager()> param0
	is-builtin-type-base(|param0) = ?ServerPlugin(); <?ClientObjectTemplateManager()> param0
	builtin-type-bases: ClientObjectTemplateManager() -> [ObjectTemplateManager(), ServerPlugin()]

	is-builtin-type-base(|param0) = ?ServerPlugin(); <?Lua()> param0
	builtin-type-bases: Lua() -> [ServerPlugin()]

	is-builtin-type-base(|param0) = ?ServerPlugin(); <?PermissionManager()> param0
	builtin-type-bases: PermissionManager() -> [ServerPlugin()]

	is-builtin-type-base(|param0) = ?ServerPlugin(); <?ServerNeighborsPlugin()> param0
	builtin-type-bases: ServerNeighborsPlugin() -> [ServerPlugin()]

	is-builtin-type-base(|param0) = ?ClientServerPlugin(); <?ServerPlugin()> param0
	is-builtin-type-base(|param0) = ?PropertySynchronization(); <?ServerPlugin()> param0
	builtin-type-bases: ServerPlugin() -> [ClientServerPlugin(), PropertySynchronization()]

	builtin-type-bases: ClientServerPlugin() -> []

	builtin-type-bases: ClientServerPluginManager() -> []

	builtin-type-bases: LayerInstance() -> []

	builtin-type-bases: Component() -> []

	builtin-type-bases: ComponentHandle() -> []

	builtin-type-bases: ComponentTemplate() -> []

	is-builtin-type-base(|param0) = ?Node(); <?Object()> param0
	builtin-type-bases: Object() -> [Node()]

	builtin-type-bases: ObjectManager() -> []

	is-builtin-type-base(|param0) = ?Node(); <?ObjectTemplate()> param0
	builtin-type-bases: ObjectTemplate() -> [Node()]

	builtin-type-bases: ObjectTemplateManager() -> []

	is-builtin-type-base(|param0) = ?ClientComponent(); <?Animation()> param0
	builtin-type-bases: Animation() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ClientComponent(); <?AreaTrigger()> param0
	builtin-type-bases: AreaTrigger() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ClientComponent(); <?Audio()> param0
	builtin-type-bases: Audio() -> [ClientComponent()]

	builtin-type-bases: Axis() -> []

	is-builtin-type-base(|param0) = ?ClientComponent(); <?Camera()> param0
	builtin-type-bases: Camera() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ClientComponent(); <?CollisionShape()> param0
	builtin-type-bases: CollisionShape() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ClientComponent(); <?Entity()> param0
	builtin-type-bases: Entity() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ClientComponent(); <?ForceField()> param0
	builtin-type-bases: ForceField() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ServerPlugin(); <?GameMode()> param0
	builtin-type-bases: GameMode() -> [ServerPlugin()]

	builtin-type-bases: InputManager() -> []

	builtin-type-bases: KeyboardState() -> []

	is-builtin-type-base(|param0) = ?ClientComponent(); <?Light()> param0
	builtin-type-bases: Light() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ClientComponent(); <?Mesh()> param0
	builtin-type-bases: Mesh() -> [ClientComponent()]

	builtin-type-bases: MouseState() -> []

	is-builtin-type-base(|param0) = ?ClientComponent(); <?Particle()> param0
	builtin-type-bases: Particle() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ServerPlugin(); <?ResourceManager()> param0
	builtin-type-bases: ResourceManager() -> [ServerPlugin()]

	is-builtin-type-base(|param0) = ?ClientComponent(); <?RigidBody()> param0
	builtin-type-bases: RigidBody() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ServerPlugin(); <?SceneManager()> param0
	builtin-type-bases: SceneManager() -> [ServerPlugin()]

	is-builtin-type-base(|param0) = ?ClientComponent(); <?SceneNode()> param0
	builtin-type-bases: SceneNode() -> [ClientComponent()]

	is-builtin-type-base(|param0) = ?ServerPlugin(); <?Sky()> param0
	builtin-type-bases: Sky() -> [ServerPlugin()]

	is-builtin-type-base(|param0) = ?ServerPlugin(); <?Terrain()> param0
	builtin-type-bases: Terrain() -> [ServerPlugin()]

	is-builtin-type-base(|param0) = ?ClientComponent(); <?Text()> param0
	builtin-type-bases: Text() -> [ClientComponent()]

	builtin-type-bases: PropertySynchronization() -> []

	builtin-type-bases: ResourceInfo() -> []

	builtin-type-bases: ServerInfo() -> []

	builtin-type-bases: ServerNeighbors() -> []

	builtin-type-bases: Angle() -> []

	builtin-type-bases: Colour() -> []

	builtin-type-bases: Degree() -> []

	builtin-type-bases: Matrix3() -> []

	builtin-type-bases: Matrix4() -> []

	builtin-type-bases: Node() -> []

	builtin-type-bases: Quaternion() -> []

	builtin-type-bases: Radian() -> []

	builtin-type-bases: Vector2() -> []

	builtin-type-bases: Vector3() -> []

	builtin-type-bases: Vector4() -> []

	builtin-type-bases: RakNetGUID() -> []

