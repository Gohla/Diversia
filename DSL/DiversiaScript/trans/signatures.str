module signatures

signature constructors // Operators
	
	ADD	: ArithmeticOp
	SUB	: ArithmeticOp
	MUL	: ArithmeticOp
	DIV : ArithmeticOp
	EQ	: BooleanOp
	NEQ	: BooleanOp
	LT	: BooleanOp
	LTE	: BooleanOp
	GT	: BooleanOp
	GTE	: BooleanOp
	AND	: BooleanOp
	OR	: BooleanOp
	AOp	: ArithmeticOp * Exp * Exp -> Exp
	BOp	: BooleanOp * Exp * Exp -> Exp

signature constructors // Object & state

	ObjectDef: Id * List(ObjectProp) * List(PropDefs) * List(ComponentDef)                   * List(VarDef) * StateDef * List(StateDef) * List(EventDef) -> ObjectDef
	ObjectDef: Id * List(ObjectProp) * List(PropDefs) * List(ComponentDef) * List(ObjectDef) * List(VarDef) * StateDef * List(StateDef) * List(EventDef) -> ObjectDef
	
	StateDef: Id * List(ObjectProp) * List(ComponentDef) * List(VarDef) * List(EventDef) -> StateDef
	DefaultStateDef: Id * List(ObjectProp) * List(ComponentDef) * List(VarDef) * List(EventDef) -> StateDef
	
	PropDef: Id * Id * Id * Exp -> PropDef
	
	Start: List(PluginDef) * List(ObjectDef) * List(EventDef) -> Start
	
	PropRef: Id * Id -> PropRef
	ObjectRef: Id -> ObjectRef
	ComponentRef: Id -> ComponentRef
	PluginRef: Id -> PluginRef
	
	This: Id -> This
	
	ObjectProp: Id * Id * Exp -> ObjectProp
	PluginProp: Id * Id * Exp -> PluginProp
	ComponentProp: Id * Id * Exp -> ComponentProp
