module DiversiaScript

imports
  libstratego-lib
  libstratego-gpp
  libstratego-aterm
  include/DiversiaScript
  lib/editor-common.generated
  rename
  store
  desugar
  codegen/lua/luagen
  
  lib/namespaces
  namespace
  type-project
  
strategies
	
	analyse-all = desugar-all; store-all
	pre-generation = desugar-all; store-all; post-desugar-all

rules // Main editor interface (defined by editor/DiversiaScript-Builders and -References.esv)
  
// Analyzes the current program, returning a tuple with errors, warnings, and notes;
// each a list of (term, message) tuples or simply (message) terms.
editor-analyze: (ast, path, project-path) -> (ast', errors, warnings, notes)
	with
    	editor-init;
    	<analyse-all> ast => ast';
      	errors   := <fail> ast';
      	warnings := <fail> ast';
      	notes    := <fail> ast'

generate: (selected, position, ast, path, project-path) -> (filename, result)
	with
    {| Declared, Referred:
    	filename := <guarantee-extension(|"lua")> path;
    	result   := <pre-generation> selected
    |}
  
  // Transforms a selection to Lua
generate-lua: (selected, position, ast, path, project-path) -> (filename, result)
	with
    {| Declared, Referred:
    	filename := <guarantee-extension(|"lua")> path;
    	result   := <lua-tostring> <to-lua> <pre-generation> selected
    |}
generate-lua-aterm: (selected, position, ast, path, project-path) -> (filename, result)
	with 
    {| Declared, Referred:
    	filename := <guarantee-extension(|"aterm")> path;
      	result   := <to-lua> <pre-generation> selected
      	    	
	|}
	
// Transforms a selection to C++
generate-cpp: (selected, position, ast, path, project-path) -> (filename, result)
	with
    {| Declared, Referred:
    	filename := <guarantee-extension(|"cpp")> path;
    	result   := ""
  	|}
  	
// Prints the abstract syntax ATerm of a selection.
generate-aterm: (selected, position, ast, path, project-path) -> (filename, result)
	with 
    {| Declared:
		filename := <guarantee-extension(|"aterm")> path;
		result   := <analyse-all> selected
	|}
	
	
/*	
editor-hover: (node, position, ast, path, project-path) ->  $[Type: [<printable> type]]
	where 
		<desugar-all> ast => ast';
		<desugar-position(desugar|ast)> position => position';
		<term-at-position(|position')> ast' => node';
		//<debug> node';
		//<debug> node;
		<type-of> node' => type
*/